from create_data.data_graph_loader import create_data_set_from_json
from model import train_model
from model.bilstm_model import BiLstm
from model.lstm_model import LstmModel
from model.simple_model import SimpleModel

if __name__ == '__main__':
    file_train = "./data_split/data_input80-10/train.json"
    file_valid = "./data_split/data_input80-10/valid.json"
    file_test = "./data_split/data_input80-10/test.json"
    file_results = "./data_split/data_input80-10/results.json"

    dataset = create_data_set_from_json(file_train, file_valid, file_test)
    dataset.init_dataset_loader()
    train_features, train_targets = dataset.convert_data_to_tensor(dataset.train_entries,
                                                                   list(range(len(dataset.train_entries))))

    print(train_features.shape)
    print(train_targets.shape)
    print('dataset hdim: ' + str(dataset.hdim))
    # simple_model = SimpleModel(input_dim=dataset.hdim, hidden_dim=2 * dataset.hdim)
    # print(simple_model)
    #
    # train_model.train(simple_model, train_features, train_targets, dataset, 200)
    #
    lstm_model = LstmModel(input_dim=dataset.hdim, hidden_dim=2 * dataset.hdim)
    print(lstm_model)
    train_model.train(lstm_model, train_features, train_targets, dataset, 100, file_results)

    # bi_lstm_model = BiLstm(input_dim=dataset.hdim, hidden_dim=2 * dataset.hdim)
    # print(bi_lstm_model)
    # train_model.train(bi_lstm_model, train_features, train_targets, dataset, 50, file_results)
