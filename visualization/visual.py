import json
from collections import Counter

import matplotlib.pyplot as plt
import numpy as np
from imblearn.over_sampling import SMOTE
from sklearn.model_selection import train_test_split

from create_data.data_graph_loader import create_data_set_from_json


def plot_data(file_train, file_valid, file_test, title):
    dataset = create_data_set_from_json(file_train, file_valid, file_test)


    dataset.init_dataset_loader()
    train_features, train_targets = dataset.convert_data_to_tensor(dataset.train_entries,
                                                                   list(range(len(dataset.train_entries))))

    X, _, Y, _ = train_test_split(train_features, train_targets, test_size=0.5)
    X, Y = np.asarray(train_features), np.asarray(train_targets)

    print('Count of training targets ', len(train_targets))

    x_min, x_max = np.min(X, 0), np.max(X, 0)
    X = (X - x_min) / (x_max - x_min)

    if isinstance(X, np.ndarray):
        _x = X.tolist()
        _y = Y.tolist()
    else:
        _x = X
        _y = Y

    plt.figure(title)

    count_o = 0
    count_plus = 0
    for i in range(X.shape[0]):
        if Y[i] == 0:
            plt.text(X[i, 0], X[i, 1], 'o',
                     fontdict={'weight': 'bold', 'size': 9})
            count_o += 1
        else:
            plt.text(X[i, 0], X[i, 1], '+',
                     color=plt.cm.Set1(0),
                     fontdict={'weight': 'bold', 'size': 9})
            count_plus += 1

    title += 'nonVul_' + str(count_o) + '_vul_' + str(count_plus)
    plt.title("Number Non-Vul: " + str(count_o) + ' Number is Vul: ' + str(count_plus))
    plt.savefig(title + '.pdf')
    plt.show()


if __name__ == '__main__':
    path = 'D:\\KHOA LUAN TOT NGHIEP\\folder_data\\after_ggnn\\chrome_debian\\imbalance\\v10'
    file_train = path + "\\train_GGNNinput_graph.json"
    file_valid = path + "\\valid_GGNNinput_graph.json"
    file_test = path + "\\test_GGNNinput_graph.json"

    # file_train = '../data_split/data_input60-10/train.json'
    # file_valid = '../data_split/data_input60-10/valid.json'
    # file_test = '../data_split/data_input60-10/test.json'
    plot_data(file_train, file_valid, file_test, 'visual')
